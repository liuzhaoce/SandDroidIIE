#!/usr/bin/env python
# -*- coding: utf-8 -*-

################################################################################
#
# Copyright (c) 2011-2012, Hu Wenjun (mindmac.hu@gmail.com)
#
# Ministry of Education Key Lab For Intelligent Networks and Network Security
# BotNet Team
# 
# SandDroid is a system to detect Android APK's Vulnerabilities, Now it can check 
# 
# the apk if extra permissions are used,if can be repackaged and if there are  
# 
# exposed components 
#
################################################################################

import traceback
import json

from utils.common import Logger

REPLACE_BYTE = ['\xff','\xfc']
#REPLACE_BYTE = []
TAGS = { 0x1 :   "TAINT_LOCATION",      0x2: "TAINT_CONTACTS",        0x4: "TAINT_MIC",            0x8: "TAINT_PHONE_NUMBER", 
         0x10:   "TAINT_LOCATION_GPS",  0x20: "TAINT_LOCATION_NET",   0x40: "TAINT_LOCATION_LAST", 0x80: "TAINT_CAMERA",
         0x100:  "TAINT_ACCELEROMETER", 0x200: "TAINT_SMS",           0x400: "TAINT_IMEI",         0x800: "TAINT_IMSI",
         0x1000: "TAINT_ICCID",         0x2000: "TAINT_DEVICE_SN",    0x4000: "TAINT_ACCOUNT",     0x8000: "TAINT_BROWSER",
         0x10000: "TAINT_OTHERDB",      0x20000: "TAINT_FILECONTENT", 0x40000: "TAINT_PACKAGE",    0x80000: "TAINT_CALL_LOG",
         0x100000: "TAINT_EMAIL",       0x200000: "TAINT_CALENDAR",   0x400000: "TAINT_SETTINGS" }

class LogcatParser():
    """
    Class to process logcat in Json format
    """
    def __init__(self, theLogger=Logger()):
        
        self.log = theLogger
        
        self.dexClassLoders = [] # DexClassLoader Used
        self.startedServices = [] # Service Started
        
        # Network Operation: Open, Close, Receive, Send
        self.openedNets = []
        self.closedNets = []
        self.receivedNets = []
        self.sentNets = []
        
        self.accessedFiles = {} # 'FdAccess': to get file path
        self.fileRWs = [] # File Read and Write
        
        # Data leakage
        self.leakedDatas = []

        self.phoneCalls = [] # Phone Calls
        self.sentSMSs = [] # SMS Send
        self.cryptOperations = [] # Crypto Operation
        
    def getTags(self,tagParam):
        """
        Retrieve the tag names found within a tag
        """
        
        tagsFound = []
        for tag in TAGS.keys():
            if tagParam & tag != 0:
                tagsFound.append(TAGS[tag])
        return tagsFound
    
    def decode(self, s, encodings=('ascii', 'utf8', 'latin1')):
        for encoding in encodings:
            try:
                return s.decode(encoding)
            except UnicodeDecodeError:
                ex = traceback.format_exc()
                self.log.exce(ex)
                
        return s.decode('ascii', 'ignore')
    
    

    def hexToStr(self, hexStr):
        """
        Convert a string hex byte values into a byte string
        """
     
        bytes = []
        hexStr = ''.join(hexStr.split(" "))
        
        strLen = len(hexStr)
        hexStr = hexStr[:strLen-strLen%2]
        
        for i in range(0, len(hexStr), 2):
            bytes.append(chr(int(hexStr[i:i+2], 16)))
        return ''.join( bytes )
        
    def parseLogcat(self, logEntry):
        """
        Parse Logcat to store the data in specified dict: self.fileRW...
        
        @param logEntry: logcat data in dictionary format 
        """
        # DexClassLoader Used
        if logEntry.has_key('DexClassLoader'):
            self.dexClassLoders.append(logEntry['DexClassLoader'])
        
        # Service Started
        elif logEntry.has_key('ServiceStart'):
            self.startedServices.append(logEntry['ServiceStart'])
            
        # Network Operations
        elif logEntry.has_key('OpenNet'):
            self.openedNets.append(logEntry['OpenNet'])
            
        elif logEntry.has_key('CloseNet'):
            self.closedNets.append(logEntry['CloseNet'])
            
        elif logEntry.has_key('RecvNet'):
            logEntry['RecvNet']['data'] = self.hexToStr(logEntry['RecvNet']['data'])
            for byte in REPLACE_BYTE:
                logEntry['RecvNet']['data'] = logEntry['RecvNet']['data'].replace(byte,'')
            self.receivedNets.append(logEntry['RecvNet'])
            
        elif logEntry.has_key('SendNet'):
            logEntry['SendNet']['data'] = self.hexToStr(logEntry['SendNet']['data'])
            for byte in REPLACE_BYTE:
                logEntry['SendNet']['data'] = logEntry['SendNet']['data'].replace(byte,'')
            self.sentNets.append(logEntry['SendNet'])
            
        # File Operations
        elif logEntry.has_key('FdAccess'):
            self.accessedFiles[logEntry['FdAccess']['id']] = logEntry['FdAccess']['path']
        elif logEntry.has_key('FileRW'):    
            if (self.accessedFiles.has_key(logEntry['FileRW']['id']) 
                and not 'dev/pts' in self.accessedFiles[logEntry['FileRW']['id']]):
                logEntry['FileRW']['path'] = self.accessedFiles[logEntry['FileRW']['id']]
                
                logEntry['FileRW']['path'] = self.hexToStr(logEntry['FileRW']['path'])
                logEntry['FileRW']['data'] = self.hexToStr(logEntry['FileRW']['data'])
                for byte in REPLACE_BYTE:
                    logEntry['FileRW']['path'] = logEntry['FileRW']['path'].replace(byte,'')
                    logEntry['FileRW']['data'] = logEntry['FileRW']['data'].replace(byte,'')
                self.fileRWs.append(logEntry['FileRW'])
                
        # Data Leaks
        elif logEntry.has_key('DataLeak'):
            logEntry['DataLeak']['data'] = self.hexToStr(logEntry['DataLeak']['data'])
            for byte in REPLACE_BYTE:
                logEntry['DataLeak']['data'] = logEntry['DataLeak']['data'].replace(byte,'')
            logEntry['DataLeak']['tag'] = ', '.join(self.getTags(int(logEntry['DataLeak']['tag'], 16)))
            self.leakedDatas.append(logEntry['DataLeak'])

        # Phone Calls
        elif logEntry.has_key('PhoneCall'):
            self.phoneCalls.append(logEntry['PhoneCall'])
        
        # Send SMS
        elif logEntry.has_key('SendSMS'):
            logEntry['SendSMS']['message'] = self.hexToStr(logEntry['SendSMS']['message'])
            self.sentSMSs.append(logEntry['SendSMS'])
            
        # Crypto Used
        elif logEntry.has_key('CryptoUsage'):
            self.cryptOperations.append(logEntry['CryptoUsage'])

#jsonstr1 = '{ "FileRW": { "operation": "read", "data": "'
##jsonstr = '{ "FileRW": { "operation": "write", "data": "6e756c6c0a", "id": "1268576366" } }'
#parser = LogcatParser()
#print json.loads(jsonstr1)

